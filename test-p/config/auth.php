<?php

return [

    /*
    |--------------------------------------------------------------------------
    | 認証デフォルト
    |--------------------------------------------------------------------------
    |
    | このオプションはアプリケーションで用いる認証のデフォルト"guard"と
    | パスワードリセットオプションをコントロールします。これらのデフォルト値は
    | 自由に変更できますが、ほとんどのアプリケーションではこのままでよいでしょう。
    |
    */

    'defaults' => [
        'guard' => 'web',
        'passwords' => 'users',
    ],

    /*
    |--------------------------------------------------------------------------
    | 認証Guard
    |--------------------------------------------------------------------------
    |
    | 次に、アプリケーションの全認証Guardを定義します。
    | もちろん、「セッション」ストレージとEloquentユーザーを元に利用する、
    | もちろん、セッションストレージとEloquentユーザーを元に利用する、
    |
    | 全認証ドライバーはユーザープロバイダを持っています。アプリケーションで
    | ユーザー情報を保管するために使用しているデータベースやストレージ
    | メカニズムから実際にどのようにユーザーを取り出すかをドライバーは定義しています。
    |
    | サポートドライバー： "session"
    |
    */

    'guards' => [
        'web' => [
            'driver' => 'session',
            'provider' => 'users',
        ],
    ],

    /*
    |--------------------------------------------------------------------------
    | ユーザープロバイダ
    |--------------------------------------------------------------------------
    |
    | 全認証ドライバーはユーザープロバイダを持っています。アプリケーションで
    | ユーザー情報を保管するために使用しているデータベースやストレージ
    | メカニズムから実際にどのようにユーザーを取り出すかをドライバーは定義しています。
    |
    | 複数のユーザーテーブルやモデルが存在している場合、それぞれの
    | モデルやテーブルを表す複数のソースを設定してください。それからこうした
    | ソースへあなたが定義した認証Guardを追加でアサインする必要があるでしょう。
    |
    | サポートドライバー： "database", "eloquent"
    |
    */

    'providers' => [
        'users' => [
            'driver' => 'eloquent',
            'model' => App\Models\User::class,
        ],

        // 'users' => [
        //     'driver' => 'database',
        //     'table' => 'users',
        // ],
    ],

    /*
    |--------------------------------------------------------------------------
    | パスワードリセット
    |--------------------------------------------------------------------------
    |
    | アプリケーションで複数のユーザーテーブルやモデルを使用している場合、
    | 複数のパスワードリセット設定が必要になるでしょう。そして特定の
    | ユーザータイプに応じて、パスワードリセット設定を分けたくなるでしょう。
    |
    | The expiry time is the number of minutes that each reset token will be
    | このトークン保存時間はセキュリティー機能で、短い時間ほど
    | 安全になります。ですが、必要に応じ変更可能です。
    |
    | The throttle setting is the number of seconds a user must wait before
    | generating more password reset tokens. This prevents the user from
    | quickly generating a very large amount of password reset tokens.
    |
    */

    'passwords' => [
        'users' => [
            'provider' => 'users',
            'table' => 'password_reset_tokens',
            'expire' => 60,
            'throttle' => 60,
        ],
    ],

    /*
    |--------------------------------------------------------------------------
    | Password Confirmation Timeout
    |--------------------------------------------------------------------------
    |
    | Here you may define the amount of seconds before a password confirmation
    | times out and the user is prompted to re-enter their password via the
    | confirmation screen. By default, the timeout lasts for three hours.
    |
    */

    'password_timeout' => 10800,

];
